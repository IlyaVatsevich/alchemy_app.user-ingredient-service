version: '3.5'

services:
  user_ingredient_service:
    build: .
    image: user_ingredient_service:1.0.0
    container_name: app
    ports:
      - "8080:8080"
    environment:
      DATASOURCE_URI: bolt://neo4j-db:7687
      DATASOURCE_USERNAME: neo4j
      DATASOURCE_PASSWORD: secretSecret
      KAFKA_BOOTSTRAP_SERVER: kafka:9092
    depends_on:
        neo4j-db:
          condition: service_healthy
    networks:
      - kafka-network
      - alchemy-network

  neo4j-db:
      image: neo4j:5
      container_name: db
      restart: on-failure
      depends_on:
        - kafka
      ports:
        - "7474:7474"
        - "7687:7687"
      environment:
        NEO4J_AUTH: "neo4j/secretSecret"
        NEO4J_PLUGINS: '["apoc"]'
        NEO4J_dbms_security_procedures_unrestricted: apoc.\\\*,gds.\\\*
        dbms_connector_bolt_listen__address: neo4j-db:7687
        dbms_connector_bolt_advertised__address: neo4j-db:7687
      healthcheck:
        test: cypher-shell --username neo4j --password secretSecret 'MATCH (n) RETURN COUNT(n);' # Checks if neo4j server is up and running
        interval: 10s
        timeout: 10s
        retries: 5
      networks:
        - alchemy-network

networks:
  kafka-network:
    name: kafka-network
  alchemy-network:
    name: alchemy-network